
// // This file will be automatically regenerated based on the schema, any resolver implementations
// // will be copied through when generating and any unknown code will be moved to the end.
// // Code generated by github.com/99designs/gqlgen version v0.17.22

// import (
// 	"context"
// 	"fmt"

// 	"gorm.io/driver/postgres"
// 	"gorm.io/gorm"
// )

// func (r *queryResolver) Employment(ctx context.Context) ([]Employment, error) {
// 	dsn := "host=localhost dbname=CensusData port=5432 sslmode=disable user=postgres"
// 	db, err := gorm.Open(postgres.Open(dsn), &gorm.Config{})
// 	if err != nil {
// 		panic("failed to connect database")
// 	} else {
// 		fmt.Println("connected to database")
// 	}
// 	db.AutoMigrate(&Employment{})
// 	table := db.Table("censusemployment")

// 	// var result Employment
// 	// table.First(&result)
// 	// table.Where("timeperiod = ?", "2019").First(&result)
// 	// fmt.Println(result)

// 	var LargeResult []Employment
// 	table.Find(&LargeResult)
// 	fmt.Println(LargeResult)

// 	// response := "not implemented: Employment - employment"

// 	return LargeResult, nil
// }

// type Employment struct {
// 	Timeperiod       string `json:"timeperiod"`
// 	MaleEmployment   string `json:"maleemployment" gorm:"column:maleemployment"`
// 	FemaleEmployment string `json:"femaleemployment" gorm:"column:femaleemployment"`
// 	MaleAged17       string `json:"MaleAged16-17" gorm:"column:MaleAged16-17"`
// 	MaleAged24       string `json:"MaleAged24" gorm:"column:MaleAged18-24"`
// 	MaleAged34       string `json:"MaleAged34"	gorm:"column:MaleAged25-34"`
// 	MaleAged49       string `json:"MaleAged49" gorm:"column:MaleAged35-49"`
// 	MaleAged64       string `json:"MaleAged64" gorm:"column:MaleAged50-64"`
// 	MaleAged65       string `json:"MaleAged65" gorm:"column:MaleAged65+"`
// 	FemaleAged17     string `json:"FemaleAged17" gorm:"column:FemaleAged16-17"`
// 	FemaleAged24     string `json:"FemaleAged24" gorm:"column:FemaleAged18-24"`
// 	FemaleAged34     string `json:"FemaleAged34" gorm:"column:FemaleAged25-34"`
// 	FemaleAged49     string `json:"FemaleAged49" gorm:"column:FemaleAged35-49"`
// 	FemaleAged64     string `json:"FemaleAged64" gorm:"column:FemaleAged50-64"`
// 	FemaleAged65     string `json:"FemaleAged65" gorm:"column:FemaleAged65+"`
// 	AllAged17        string `json:"AllAged17" gorm:"column:AllAged16-17"`
// 	AllAged24        string `json:"AllAged24" gorm:"column:AllAged18-24"`
// 	AllAged34        string `json:"AllAged34" gorm:"column:AllAged25-34"`
// 	AllAged49        string `json:"AllAged49" gorm:"column:AllAged35-49"`
// 	AllAged64        string `json:"AllAged64" gorm:"column:AllAged50-64"`
// }

// // Mutation returns MutationResolver implementation.
// func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// // Query returns QueryResolver implementation.
// func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

// type mutationResolver struct{ *Resolver }
// type queryResolver struct{ *Resolver }
